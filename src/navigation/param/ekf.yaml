frequency: 30

silent_tf_failure: false

sensor_timeout: 0.1

two_d_mode: true

transform_time_offset: 0.0

transform_timeout: 0.0

print_diagnostics: false

debug: false

debug_out_file: None

publish_tf: true

publish_acceleration: false

map_frame: map              # Defaults to "map" if unspecified
odom_frame: odom            # Defaults to "odom" if unspecified
base_link_frame: base_link  # Defaults to "base_link" if unspecified
world_frame: odom           # Defaults to the value of odom_frame if unspecified

# The filter accepts an arbitrary number of inputs from each input message type (nav_msgs/Odometry,
# geometry_msgs/PoseWithCovarianceStamped, geometry_msgs/TwistWithCovarianceStamped,
# sensor_msgs/Imu). To add an input, simply append the next number in the sequence to its "base" name, e.g., odom0,
# odom1, twist0, twist1, imu0, imu1, imu2, etc. The value should be the topic name. These parameters obviously have no
# default values, and must be specified.
# odom0: rtabmap/odom

# # Each sensor reading updates some or all of the filter's state. These options give you greater control over which
# # values from each measurement are fed to the filter. For example, if you have an odometry message as input, but only
# # want to use its Z position value, then set the entire vector to false, except for the third entry. The order of the
# # values is x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az. Note that not some message types
# # do not provide some of the state variables estimated by the filter. For example, a TwistWithCovarianceStamped message
# # has no pose information, so the first six values would be meaningless in that case. Each vector defaults to all false
# # if unspecified, effectively making this parameter required for each sensor.
# odom0_config: [true,  true,  false,
#                false, false, false,
#                true, true, false,
#                false, false, true,
#                false, false, false]

# # If you have high-frequency data or are running with a low frequency parameter value, then you may want to increase
# # the size of the subscription queue so that more measurements are fused.
# odom0_queue_size: 10

# # [ADVANCED] Large messages in ROS can exhibit strange behavior when they arrive at a high frequency. This is a result
# # of Nagle's algorithm. This option tells the ROS subscriber to use the tcpNoDelay option, which disables Nagle's
# # algorithm.
# odom0_nodelay: false

# # [ADVANCED] When measuring one pose variable with two sensors, a situation can arise in which both sensors under-
# # report their covariances. This can lead to the filter rapidly jumping back and forth between each measurement as they
# # arrive. In these cases, it often makes sense to (a) correct the measurement covariances, or (b) if velocity is also
# # measured by one of the sensors, let one sensor measure pose, and the other velocity. However, doing (a) or (b) isn't
# # always feasible, and so we expose the differential parameter. When differential mode is enabled, all absolute pose
# # data is converted to velocity data by differentiating the absolute pose measurements. These velocities are then
# # integrated as usual. NOTE: this only applies to sensors that provide pose measurements; setting differential to true
# # for twist measurements has no effect.
# odom0_differential: true

# # [ADVANCED] When the node starts, if this parameter is true, then the first measurement is treated as a "zero point"
# # for all future measurements. While you can achieve the same effect with the differential paremeter, the key
# # difference is that the relative parameter doesn't cause the measurement to be converted to a velocity before
# # integrating it. If you simply want your measurements to start at 0 for a given sensor, set this to true.
# odom0_relative: false

# # [ADVANCED] If your data is subject to outliers, use these threshold settings, expressed as Mahalanobis distances, to
# # control how far away from the current vehicle state a sensor measurement is permitted to be. Each defaults to
# # numeric_limits<double>::max() if unspecified. It is strongly recommended that these parameters be removed if not
# # required. Data is specified at the level of pose and twist variables, rather than for each variable in isolation.
# # For messages that have both pose and twist data, the parameter specifies to which part of the message we are applying
# # the thresholds.

# odom0_pose_rejection_threshold: 100000
# odom0_twist_rejection_threshold: 100000

#x_pos    , y_pos    , z_pos,
#roll     , pitch    , yaw,
#x_vel    , y_vel    , z_vel,
#roll_vel , pitch_vel, yaw_vel,
#x_accel  , y_accel  , z_accel
pose0: /pose_with_covariance_stamped
pose0_config: [true, true, true,
               false, false, true,
               false, false, false,
               false, false, false,
               false, false, false]
pose0_differential: false
pose0_queue_size: 10
pose0_relative: false
pose0_rejection_threshold: 10
pose0_nodelay: false 

imu0: /imu/data
imu0_config: [false, false, false,
              false,  false,  true,
              false, false, false,
              false,  false,  true,
              true,  true,  false]
imu0_nodelay: false
imu0_differential: true
imu0_relative: false
imu0_queue_size: 1
imu0_pose_rejection_threshold: 0.01
imu0_twist_rejection_threshold: 0.01
imu0_linear_acceleration_rejection_threshold: 0.01
imu0_remove_gravitational_acceleration: true

use_control: false

stamped_control: false

#### unused since use_control is false ####
control_timeout: 0.2

control_config: [true, false, false, false, false, true]

acceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 3.4]

deceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 4.5]

acceleration_gains: [0.8, 0.0, 0.0, 0.0, 0.0, 0.9]

deceleration_gains: [1.0, 0.0, 0.0, 0.0, 0.0, 1.0]
#### unused since use_control is false ####

smooth_lagged_data: false

#x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az
# process_noise_covariance: [0.05, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                            0,    0.05, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                            0,    0,    0.06, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                            0,    0,    0,    0.03, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                            0,    0,    0,    0,    0.03, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
#                            0,    0,    0,    0,    0,    0.06, 0,     0,     0,    0,    0,    0,    0,    0,    0,
#                            0,    0,    0,    0,    0,    0,    0.025, 0,     0,    0,    0,    0,    0,    0,    0,
#                            0,    0,    0,    0,    0,    0,    0,     0.025, 0,    0,    0,    0,    0,    0,    0,
#                            0,    0,    0,    0,    0,    0,    0,     0,     0.04, 0,    0,    0,    0,    0,    0,
#                            0,    0,    0,    0,    0,    0,    0,     0,     0,    0.01, 0,    0,    0,    0,    0,
#                            0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.01, 0,    0,    0,    0,
#                            0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.02, 0,    0,    0,
#                            0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.01, 0,    0,
#                            0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.01, 0,
#                            0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.015]
process_noise_covariance: [0.1, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0.1, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0.1, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0.1, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0.1, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0.1, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0.025, 0,     0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0.025, 0,    0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0.025, 0,    0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0.01, 0,    0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.01, 0,    0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.01, 0,    0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.1, 0,    0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.1, 0,
                           0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.01]

initial_estimate_covariance: [1e-8, 0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    1e-8, 0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    1e-8, 0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    1e-8, 0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    1e-8, 0,    0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    1e-8, 0,    0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    1e-8, 0,    0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    1e-8, 0,    0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    1e-8, 0,     0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    1e-8,  0,     0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     1e-8,  0,     0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     1e-8,  0,    0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     1e-8, 0,    0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    1e-8, 0,
                              0,    0,    0,    0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    1e-8]
